{"id":"../node_modules/matter/src/parsers/index.js","dependencies":[{"name":"/Users/ngurahdanuhputra/phaser/mygame/package.json","includedInParent":true,"mtime":1656602873371},{"name":"/Users/ngurahdanuhputra/phaser/mygame/node_modules/matter/package.json","includedInParent":true,"mtime":1656602867540},{"name":"fs","loc":{"line":1,"column":17,"index":17},"parent":"/Users/ngurahdanuhputra/phaser/mygame/node_modules/matter/src/parsers/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":2,"column":19,"index":43},"parent":"/Users/ngurahdanuhputra/phaser/mygame/node_modules/matter/src/parsers/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js"},{"name":"underscore","loc":{"line":3,"column":16,"index":68},"parent":"/Users/ngurahdanuhputra/phaser/mygame/node_modules/matter/src/parsers/index.js","resolved":"/Users/ngurahdanuhputra/phaser/mygame/node_modules/underscore/underscore.js"}],"generated":{"js":"var fs = require('fs');\nvar path = require('path');\nvar _ = require('underscore');\n\nvar re = {};\nre.leadingNewlines = /^\\n+/;\nre.trailingWhitespace = /\\s+$/;\nre.trailingLineWhitespace = /\\s+\\n/g;\nre.leadingSpace = /\\ */;\n\nvar parsers = exports;\n\nparsers.defaults = function(defaults) {\n  if (!defaults) { return _(parsers.defaults).copy(); }\n  _(parsers.defaults).extend(defaults || {});\n  return this;\n};\n\nparsers.defaults.encoding = 'utf8';\nparsers.defaults.indicator = /---/;\nparsers.defaults.ignore = new RegExp([\n  '(\\\\/\\\\/)',\n  '(\\\\/\\\\*)',\n  '(\\\\*\\\\/)',\n  '(#)'\n].join('|'), 'g');\n\nparsers.registry = {};\nparsers.register = function(name, fn) {\n  if (name in parsers.registry) {\n    throw new Error(\"Parser '\" + name + \"' already exists\");\n  }\n\n  parsers.registry[name] = parsers.make(fn);\n  return this;\n};\nparsers.unregister = function(name) {\n  delete parsers.registry[name];\n  return this;\n};\n\nparsers.unindent = function(data) {\n  var lines = data.split('\\n');\n\n  var indentSize = lines.reduce(function(min, curr) {\n    if (!curr) { return min; }\n    var match = curr.match(re.leadingSpace);\n    return Math.min(min, match[0].length);\n  }, Infinity);\n\n  return lines\n    .map(function(line) { return line.slice(indentSize); })\n    .join('\\n');\n};\n\nparsers.clean = function(data, options) {\n  options = _(options || {}).defaults({\n    ignore: parsers.defaults.ignore,\n  });\n\n  data = data\n    .replace(options.ignore, '')\n    .replace(re.leadingNewlines, '')\n    .replace(re.trailingWhitespace, '')\n    .replace(re.trailingLineWhitespace, '\\n');\n\n  return parsers.unindent(data);\n};\n\nparsers.extract = function(data, options) {\n  options = _(options || {}).defaults({\n    indicator: parsers.defaults.indicator,\n    indicators: parsers.defaults.indicators\n  });\n\n  if (!options.indicators) { options.indicators = {}; }\n  if (!options.indicators.head) { options.indicators.head = options.indicator; }\n  if (!options.indicators.tail) { options.indicators.tail = options.indicator; }\n\n  // chop off the parts that don't 'matter' (that was lame :)\n  var headMatch = data.match(options.indicators.head);\n  if (!headMatch) { throw new Error(\"Head indicator not found.\"); }\n  data = data.slice(headMatch.index + headMatch[0].length);\n\n  var tailMatch = data.match(options.indicators.tail);\n  if (!tailMatch) { throw new Error(\"Tail indicator not found.\"); }\n  data = data.slice(0, tailMatch.index);\n\n  return parsers.clean(data, options);\n};\n\nparsers.make = function(fn) {\n  var parser = function(data, options) {\n    options = options || {};\n    data = parsers.extract(data, options);\n    return fn(data);\n  };\n\n  parser.inFile = function(filename, options, done) {\n    if (arguments.length < 3) {\n      done = options;\n      options = {};\n    }\n\n    options = _(options || {}).defaults({\n      encoding: parsers.defaults.encoding\n    });\n\n    fs.readFile(path.resolve(filename), options, function(err, data) {\n      if (err) {\n        done(err);\n        return;\n      }\n\n      try {\n        done(null, parser(data, options), data);\n      }\n      catch (e) {\n        done(e);\n      }\n    });\n  };\n\n  return parser;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/matter/src/parsers/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}}],"sources":{"../node_modules/matter/src/parsers/index.js":"var fs = require('fs');\nvar path = require('path');\nvar _ = require('underscore');\n\nvar re = {};\nre.leadingNewlines = /^\\n+/;\nre.trailingWhitespace = /\\s+$/;\nre.trailingLineWhitespace = /\\s+\\n/g;\nre.leadingSpace = /\\ */;\n\nvar parsers = exports;\n\nparsers.defaults = function(defaults) {\n  if (!defaults) { return _(parsers.defaults).copy(); }\n  _(parsers.defaults).extend(defaults || {});\n  return this;\n};\n\nparsers.defaults.encoding = 'utf8';\nparsers.defaults.indicator = /---/;\nparsers.defaults.ignore = new RegExp([\n  '(\\\\/\\\\/)',\n  '(\\\\/\\\\*)',\n  '(\\\\*\\\\/)',\n  '(#)'\n].join('|'), 'g');\n\nparsers.registry = {};\nparsers.register = function(name, fn) {\n  if (name in parsers.registry) {\n    throw new Error(\"Parser '\" + name + \"' already exists\");\n  }\n\n  parsers.registry[name] = parsers.make(fn);\n  return this;\n};\nparsers.unregister = function(name) {\n  delete parsers.registry[name];\n  return this;\n};\n\nparsers.unindent = function(data) {\n  var lines = data.split('\\n');\n\n  var indentSize = lines.reduce(function(min, curr) {\n    if (!curr) { return min; }\n    var match = curr.match(re.leadingSpace);\n    return Math.min(min, match[0].length);\n  }, Infinity);\n\n  return lines\n    .map(function(line) { return line.slice(indentSize); })\n    .join('\\n');\n};\n\nparsers.clean = function(data, options) {\n  options = _(options || {}).defaults({\n    ignore: parsers.defaults.ignore,\n  });\n\n  data = data\n    .replace(options.ignore, '')\n    .replace(re.leadingNewlines, '')\n    .replace(re.trailingWhitespace, '')\n    .replace(re.trailingLineWhitespace, '\\n');\n\n  return parsers.unindent(data);\n};\n\nparsers.extract = function(data, options) {\n  options = _(options || {}).defaults({\n    indicator: parsers.defaults.indicator,\n    indicators: parsers.defaults.indicators\n  });\n\n  if (!options.indicators) { options.indicators = {}; }\n  if (!options.indicators.head) { options.indicators.head = options.indicator; }\n  if (!options.indicators.tail) { options.indicators.tail = options.indicator; }\n\n  // chop off the parts that don't 'matter' (that was lame :)\n  var headMatch = data.match(options.indicators.head);\n  if (!headMatch) { throw new Error(\"Head indicator not found.\"); }\n  data = data.slice(headMatch.index + headMatch[0].length);\n\n  var tailMatch = data.match(options.indicators.tail);\n  if (!tailMatch) { throw new Error(\"Tail indicator not found.\"); }\n  data = data.slice(0, tailMatch.index);\n\n  return parsers.clean(data, options);\n};\n\nparsers.make = function(fn) {\n  var parser = function(data, options) {\n    options = options || {};\n    data = parsers.extract(data, options);\n    return fn(data);\n  };\n\n  parser.inFile = function(filename, options, done) {\n    if (arguments.length < 3) {\n      done = options;\n      options = {};\n    }\n\n    options = _(options || {}).defaults({\n      encoding: parsers.defaults.encoding\n    });\n\n    fs.readFile(path.resolve(filename), options, function(err, data) {\n      if (err) {\n        done(err);\n        return;\n      }\n\n      try {\n        done(null, parser(data, options), data);\n      }\n      catch (e) {\n        done(e);\n      }\n    });\n  };\n\n  return parser;\n};\n"},"lineCount":126}},"error":null,"hash":"93b4a92489c89fb9ab60d7b217fdb6f6","cacheData":{"env":{}}}