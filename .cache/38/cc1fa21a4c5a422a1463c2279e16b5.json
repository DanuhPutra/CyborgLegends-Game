{"id":"ui/Medkit.js","dependencies":[{"name":"c:\\Phaser\\mygame\\package.json","includedInParent":true,"mtime":1656602873370},{"name":"phaser","loc":{"line":1,"column":19,"index":19},"parent":"c:\\Phaser\\mygame\\src\\ui\\Medkit.js","resolved":"c:\\Phaser\\mygame\\node_modules\\phaser\\dist\\phaser.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _phaser = _interopRequireDefault(require(\"phaser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Medkit = /*#__PURE__*/function (_Phaser$Physics$Arcad) {\n  _inherits(Medkit, _Phaser$Physics$Arcad);\n\n  var _super = _createSuper(Medkit);\n\n  function Medkit(scene, x, y, texture) {\n    var _this;\n\n    _classCallCheck(this, Medkit);\n\n    _this = _super.call(this, scene, x, y, texture);\n\n    _this.setScale(0.2);\n\n    return _this;\n  }\n\n  _createClass(Medkit, [{\n    key: \"die\",\n    value: function die() {\n      this.destroy();\n    }\n  }]);\n\n  return Medkit;\n}(_phaser.default.Physics.Arcade.Sprite);\n\nexports.default = Medkit;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"ui/Medkit.js","original":{"line":1,"column":0}},{"generated":{"line":34,"column":4},"source":"ui/Medkit.js","original":{"line":2,"column":21},"name":"Medkit"},{"generated":{"line":39,"column":2},"source":"ui/Medkit.js","original":{"line":4,"column":4}},{"generated":{"line":39,"column":18},"source":"ui/Medkit.js","original":{"line":4,"column":16},"name":"scene"},{"generated":{"line":39,"column":23},"source":"ui/Medkit.js","original":{"line":4,"column":4}},{"generated":{"line":39,"column":25},"source":"ui/Medkit.js","original":{"line":4,"column":23},"name":"x"},{"generated":{"line":39,"column":26},"source":"ui/Medkit.js","original":{"line":4,"column":4}},{"generated":{"line":39,"column":28},"source":"ui/Medkit.js","original":{"line":4,"column":26},"name":"y"},{"generated":{"line":39,"column":29},"source":"ui/Medkit.js","original":{"line":4,"column":4}},{"generated":{"line":39,"column":31},"source":"ui/Medkit.js","original":{"line":4,"column":29},"name":"texture"},{"generated":{"line":39,"column":38},"source":"ui/Medkit.js","original":{"line":4,"column":4}},{"generated":{"line":39,"column":40},"source":"ui/Medkit.js","original":{"line":4,"column":38}},{"generated":{"line":40,"column":4},"source":"ui/Medkit.js","original":{"line":4,"column":38}},{"generated":{"line":42,"column":4},"source":"ui/Medkit.js","original":{"line":4,"column":38}},{"generated":{"line":44,"column":4},"source":"ui/Medkit.js","original":{"line":5,"column":8}},{"generated":{"line":44,"column":30},"source":"ui/Medkit.js","original":{"line":5,"column":14},"name":"scene"},{"generated":{"line":44,"column":35},"source":"ui/Medkit.js","original":{"line":5,"column":8}},{"generated":{"line":44,"column":37},"source":"ui/Medkit.js","original":{"line":5,"column":21},"name":"x"},{"generated":{"line":44,"column":38},"source":"ui/Medkit.js","original":{"line":5,"column":8}},{"generated":{"line":44,"column":40},"source":"ui/Medkit.js","original":{"line":5,"column":24},"name":"y"},{"generated":{"line":44,"column":41},"source":"ui/Medkit.js","original":{"line":5,"column":8}},{"generated":{"line":44,"column":43},"source":"ui/Medkit.js","original":{"line":5,"column":27},"name":"texture"},{"generated":{"line":44,"column":50},"source":"ui/Medkit.js","original":{"line":5,"column":8}},{"generated":{"line":46,"column":4},"source":"ui/Medkit.js","original":{"line":6,"column":8}},{"generated":{"line":46,"column":10},"source":"ui/Medkit.js","original":{"line":6,"column":13},"name":"setScale"},{"generated":{"line":46,"column":18},"source":"ui/Medkit.js","original":{"line":6,"column":8}},{"generated":{"line":46,"column":19},"source":"ui/Medkit.js","original":{"line":6,"column":22}},{"generated":{"line":46,"column":22},"source":"ui/Medkit.js","original":{"line":6,"column":8}},{"generated":{"line":48,"column":4},"source":"ui/Medkit.js","original":{"line":4,"column":38}},{"generated":{"line":49,"column":2},"source":"ui/Medkit.js","original":{"line":8,"column":5}},{"generated":{"line":53,"column":11},"source":"ui/Medkit.js","original":{"line":9,"column":4}},{"generated":{"line":53,"column":26},"source":"ui/Medkit.js","original":{"line":9,"column":10}},{"generated":{"line":54,"column":6},"source":"ui/Medkit.js","original":{"line":10,"column":8}},{"generated":{"line":54,"column":11},"source":"ui/Medkit.js","original":{"line":10,"column":13},"name":"destroy"},{"generated":{"line":54,"column":18},"source":"ui/Medkit.js","original":{"line":10,"column":8}},{"generated":{"line":55,"column":4},"source":"ui/Medkit.js","original":{"line":11,"column":5}},{"generated":{"line":59,"column":2},"source":"ui/Medkit.js","original":{"line":2,"column":36},"name":"Phaser"},{"generated":{"line":59,"column":17},"source":"ui/Medkit.js","original":{"line":2,"column":36}},{"generated":{"line":59,"column":18},"source":"ui/Medkit.js","original":{"line":2,"column":43},"name":"Physics"},{"generated":{"line":59,"column":25},"source":"ui/Medkit.js","original":{"line":2,"column":36}},{"generated":{"line":59,"column":26},"source":"ui/Medkit.js","original":{"line":2,"column":51},"name":"Arcade"},{"generated":{"line":59,"column":32},"source":"ui/Medkit.js","original":{"line":2,"column":36}},{"generated":{"line":59,"column":33},"source":"ui/Medkit.js","original":{"line":2,"column":59},"name":"Sprite"}],"sources":{"ui/Medkit.js":"import Phaser from 'phaser'\nexport default class Medkit extends Phaser.Physics.Arcade. Sprite {\n\n    constructor(scene, x, y, texture) { \n        super(scene, x, y, texture) \n        this.setScale(0.2)\n    \n    }\n    die (){\n        this.destroy()\n    }\n     \n}"},"lineCount":null}},"error":null,"hash":"5cf6c3e1a45bffb0e41a2f70ddeb0bd6","cacheData":{"env":{}}}