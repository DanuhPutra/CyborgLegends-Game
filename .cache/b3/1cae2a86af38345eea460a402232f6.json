{"id":"Game/carrot.js","dependencies":[{"name":"/Users/ngurahdanuhputra/phaser/meeting4/package.json","includedInParent":true,"mtime":1622407071000},{"name":"phaser","loc":{"line":1,"column":19,"index":19},"parent":"/Users/ngurahdanuhputra/phaser/meeting4/src/Game/carrot.js","resolved":"/Users/ngurahdanuhputra/phaser/meeting4/node_modules/phaser/dist/phaser.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _phaser = _interopRequireDefault(require(\"phaser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar carrot = /*#__PURE__*/function (_Phaser$Physics$Arcad) {\n  _inherits(carrot, _Phaser$Physics$Arcad);\n\n  var _super = _createSuper(carrot);\n\n  function carrot(scene, x, y, texture) {\n    var _this;\n\n    _classCallCheck(this, carrot);\n\n    _this = _super.call(this, scene, x, y, texture);\n\n    _this.setScale(0.5);\n\n    return _this;\n  }\n\n  return _createClass(carrot);\n}(_phaser.default.Physics.Arcade.Sprite);\n\nexports.default = carrot;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"Game/carrot.js","original":{"line":1,"column":0}},{"name":"carrot","generated":{"line":34,"column":4},"source":"Game/carrot.js","original":{"line":2,"column":21}},{"generated":{"line":39,"column":0},"source":"Game/carrot.js","original":{"line":3,"column":4}},{"name":"scene","generated":{"line":39,"column":18},"source":"Game/carrot.js","original":{"line":3,"column":16}},{"generated":{"line":39,"column":23},"source":"Game/carrot.js","original":{"line":3,"column":4}},{"name":"x","generated":{"line":39,"column":25},"source":"Game/carrot.js","original":{"line":3,"column":23}},{"generated":{"line":39,"column":26},"source":"Game/carrot.js","original":{"line":3,"column":4}},{"name":"y","generated":{"line":39,"column":28},"source":"Game/carrot.js","original":{"line":3,"column":25}},{"generated":{"line":39,"column":29},"source":"Game/carrot.js","original":{"line":3,"column":4}},{"name":"texture","generated":{"line":39,"column":31},"source":"Game/carrot.js","original":{"line":3,"column":28}},{"generated":{"line":39,"column":38},"source":"Game/carrot.js","original":{"line":3,"column":4}},{"generated":{"line":39,"column":40},"source":"Game/carrot.js","original":{"line":3,"column":36}},{"generated":{"line":40,"column":0},"source":"Game/carrot.js","original":{"line":3,"column":36}},{"generated":{"line":42,"column":0},"source":"Game/carrot.js","original":{"line":3,"column":36}},{"generated":{"line":44,"column":0},"source":"Game/carrot.js","original":{"line":4,"column":8}},{"name":"scene","generated":{"line":44,"column":30},"source":"Game/carrot.js","original":{"line":4,"column":14}},{"generated":{"line":44,"column":35},"source":"Game/carrot.js","original":{"line":4,"column":8}},{"name":"x","generated":{"line":44,"column":37},"source":"Game/carrot.js","original":{"line":4,"column":21}},{"generated":{"line":44,"column":38},"source":"Game/carrot.js","original":{"line":4,"column":8}},{"name":"y","generated":{"line":44,"column":40},"source":"Game/carrot.js","original":{"line":4,"column":23}},{"generated":{"line":44,"column":41},"source":"Game/carrot.js","original":{"line":4,"column":8}},{"name":"texture","generated":{"line":44,"column":43},"source":"Game/carrot.js","original":{"line":4,"column":26}},{"generated":{"line":44,"column":50},"source":"Game/carrot.js","original":{"line":4,"column":8}},{"generated":{"line":46,"column":0},"source":"Game/carrot.js","original":{"line":5,"column":8}},{"name":"setScale","generated":{"line":46,"column":10},"source":"Game/carrot.js","original":{"line":5,"column":13}},{"generated":{"line":46,"column":18},"source":"Game/carrot.js","original":{"line":5,"column":8}},{"generated":{"line":46,"column":19},"source":"Game/carrot.js","original":{"line":5,"column":22}},{"generated":{"line":46,"column":22},"source":"Game/carrot.js","original":{"line":5,"column":8}},{"generated":{"line":48,"column":0},"source":"Game/carrot.js","original":{"line":3,"column":36}},{"generated":{"line":49,"column":0},"source":"Game/carrot.js","original":{"line":6,"column":5}},{"name":"Phaser","generated":{"line":52,"column":2},"source":"Game/carrot.js","original":{"line":2,"column":36}},{"name":"Physics","generated":{"line":52,"column":18},"source":"Game/carrot.js","original":{"line":2,"column":43}},{"generated":{"line":52,"column":25},"source":"Game/carrot.js","original":{"line":2,"column":36}},{"name":"Arcade","generated":{"line":52,"column":26},"source":"Game/carrot.js","original":{"line":2,"column":51}},{"generated":{"line":52,"column":32},"source":"Game/carrot.js","original":{"line":2,"column":36}},{"name":"Sprite","generated":{"line":52,"column":33},"source":"Game/carrot.js","original":{"line":2,"column":58}}],"sources":{"Game/carrot.js":"import Phaser from \"phaser\";\nexport default class carrot extends Phaser.Physics.Arcade.Sprite{\n    constructor(scene, x,y, texture){\n        super(scene, x,y, texture)\n        this.setScale(0.5)\n    }\n}"},"lineCount":null}},"error":null,"hash":"54713cf81f1f6273e56afb21e581593a","cacheData":{"env":{}}}